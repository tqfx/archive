cmake_minimum_required(VERSION 3.15) # CheckPIESupported
set(LUA_VERSION 5.4.4 CACHE STRING "specifies building version for lua")
set_property(CACHE LUA_VERSION PROPERTY STRINGS 5.4.4 5.3.6 5.2.4 5.1.5)
project(lua VERSION ${LUA_VERSION} LANGUAGES C)

if(POLICY CMP0135) # 3.24
  cmake_policy(SET CMP0135 NEW)
endif() # DOWNLOAD_EXTRACT_TIMESTAMP

include(FetchContent)
find_file(LUA_ARCHIVE ${PROJECT_NAME}-${PROJECT_VERSION}.tar.gz
  ${CMAKE_CURRENT_LIST_DIR} ${CMAKE_SOURCE_DIR} ${CMAKE_BINARY_DIR}
)

if(LUA_ARCHIVE)
  FetchContent_Declare(${PROJECT_NAME} URL ${LUA_ARCHIVE})
else()
  FetchContent_Declare(${PROJECT_NAME}
    URL https://www.${PROJECT_NAME}.org/ftp/${PROJECT_NAME}-${PROJECT_VERSION}.tar.gz
  )
endif()

FetchContent_GetProperties(${PROJECT_NAME})

if(NOT CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME)
  set(LUA_VERSION_MAJOR ${PROJECT_VERSION_MAJOR} PARENT_SCOPE)
  set(LUA_VERSION_MINOR ${PROJECT_VERSION_MINOR} PARENT_SCOPE)
  set(LUA_VERSION_PATCH ${PROJECT_VERSION_PATCH} PARENT_SCOPE)
endif()

if(NOT ${PROJECT_NAME}_POPULATED)
  FetchContent_Populate(${PROJECT_NAME})

  if(NOT CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME)
    set(LUA_LIBRARIES lib${PROJECT_NAME} PARENT_SCOPE)
    set(LUA_EXECUTABLE $<TARGET_FILE:${PROJECT_NAME}> PARENT_SCOPE)
    set(LUA_INCLUDE_DIR ${${PROJECT_NAME}_SOURCE_DIR}/src PARENT_SCOPE)
  endif()

  file(COPY cmake/CMakeLists.txt DESTINATION ${${PROJECT_NAME}_SOURCE_DIR})
  add_subdirectory(${${PROJECT_NAME}_SOURCE_DIR} ${${PROJECT_NAME}_BINARY_DIR})
endif()
