#!/usr/bin/env lua

package.path = arg[0]:sub(0, -arg[0]:match("([^/\\]*)$"):len() - 1) .. "?.lua;" .. package.path
local test = require("test")
local a = require("liba")

ctx = a.polytrack3.init({0, 0, 0}, {1, 1, 1})
a.polytrack3.all(ctx, 0.5)
a.polytrack3:all(ctx, 0.5)
a.polytrack3.pos(ctx, 0.5)
a.polytrack3:pos(ctx, 0.5)
a.polytrack3.vec(ctx, 0.5)
a.polytrack3:vec(ctx, 0.5)
a.polytrack3.acc(ctx, 0.5)
a.polytrack3:acc(ctx, 0.5)
tab = a.polytrack3.into(ctx)
ctx = a.polytrack3.from(tab)
tab = a.polytrack3:into(ctx)
ctx = a.polytrack3:from(tab)

ctx = a:polytrack3({0, 0, 0}, {1, 1, 1})
test:r(ctx)
ctx:pos(0.5)
ctx:vec(0.5)
ctx:acc(0.5)
ctx(0.5)

ctx = a.polytrack5.init({0, 0, 0, 0}, {1, 1, 1, 1})
a.polytrack5.all(ctx, 0.5)
a.polytrack5:all(ctx, 0.5)
a.polytrack5.pos(ctx, 0.5)
a.polytrack5:pos(ctx, 0.5)
a.polytrack5.vec(ctx, 0.5)
a.polytrack5:vec(ctx, 0.5)
a.polytrack5.acc(ctx, 0.5)
a.polytrack5:acc(ctx, 0.5)
tab = a.polytrack5.into(ctx)
ctx = a.polytrack5.from(tab)
tab = a.polytrack5:into(ctx)
ctx = a.polytrack5:from(tab)

ctx = a:polytrack5({0, 0, 0, 0}, {1, 1, 1, 1})
test:r(ctx)
ctx:pos(0.5)
ctx:vec(0.5)
ctx:acc(0.5)
ctx(0.5)

ctx = a.polytrack7.init({0, 0, 0, 0, 0}, {1, 1, 1, 1, 1})
a.polytrack7.all(ctx, 0.5)
a.polytrack7:all(ctx, 0.5)
a.polytrack7.pos(ctx, 0.5)
a.polytrack7:pos(ctx, 0.5)
a.polytrack7.vec(ctx, 0.5)
a.polytrack7:vec(ctx, 0.5)
a.polytrack7.acc(ctx, 0.5)
a.polytrack7:acc(ctx, 0.5)
tab = a.polytrack7.into(ctx)
ctx = a.polytrack7.from(tab)
tab = a.polytrack7:into(ctx)
ctx = a.polytrack7:from(tab)

ctx = a:polytrack7({0, 0, 0, 0, 0}, {1, 1, 1, 1, 1})
test:r(ctx)
ctx:pos(0.5)
ctx:vec(0.5)
ctx:acc(0.5)
ctx(0.5)
