file(GLOB_RECURSE SOURCES src/*.c)
add_library(a-lua SHARED ${SOURCES} $<TARGET_OBJECTS:a>)
set_target_properties(a-lua PROPERTIES DEFINE_SYMBOL A_EXPORTS OUTPUT_NAME a)
target_include_directories(a-lua PRIVATE ${LUA_INCLUDE_DIR})
target_compile_definitions(a-lua PRIVATE A_REAL_BITS=64)
target_link_libraries(a-lua PRIVATE ${LUA_LIBRARIES} a)
target_library_options(a-lua)

if(LUA_VERSION_MAJOR AND LUA_VERSION_MINOR)
  set(LUA_VERSION ${LUA_VERSION_MAJOR}.${LUA_VERSION_MINOR})
endif()

install(TARGETS a-lua
  EXPORT ${PROJECT_NAME}-targets
  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}/lua/${LUA_VERSION}
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}/lua/${LUA_VERSION}
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}/lua/${LUA_VERSION}
)

find_program(LUA_EXECUTABLE NAMES lua
  lua${LUA_VERSION_MAJOR}${LUA_VERSION_MINOR}
  lua${LUA_VERSION_MAJOR}.${LUA_VERSION_MINOR}
  lua-${LUA_VERSION_MAJOR}.${LUA_VERSION_MINOR}
  lua.${LUA_VERSION_MAJOR}.${LUA_VERSION_MINOR}
  HINTS ENV LUA_DIR
)

if(NOT ENABLE_SANITIZE)
  include(test.cmake)
endif()
