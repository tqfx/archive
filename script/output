; extern "C"
A_EXTERN_C_ENTER = #if defined(__cplusplus)\nextern "C" {\n#endif /* __cplusplus */
A_EXTERN_C_LEAVE = #if defined(__cplusplus)\n} /* extern "C" */\n#endif /* __cplusplus */
A_EXTERN_C       = extern "C"

; attribute deprecated
A_DEPRECATED =

; static inline
A_INTERN_FORCE = static inline
A_INTERN       = static inline

; attribute visibility
A_EXPORT =
A_IMPORT =
A_HIDDEN =
A_PUBLIC =

; keywords
a_register =
a_volatile =
a_restrict =

; bool
a_true   = 1
a_false  = 0
a_bool_t = int

a_zero = 0
a_cast = CAST
a_null = NULL
a_void_t  = void
a_noarg_t = void
a_noret_t = void

a_size_t   = size_t
A_SIZE_MAX = SIZE_MAX

a_i8_t   =  int8_t
a_u8_t   = uint8_t
A_I8_C   =  INT8_C
A_U8_C   = UINT8_C
A_I8_MIN =  INT8_MIN
A_I8_MAX =  INT8_MAX
A_U8_MAX = UINT8_MAX

a_i16_t   =  int16_t
a_u16_t   = uint16_t
A_I16_C   =  INT16_C
A_U16_C   = UINT16_C
A_I16_MIN =  INT16_MIN
A_I16_MAX =  INT16_MAX
A_U16_MAX = UINT16_MAX

a_i32_t   =  int32_t
a_u32_t   = uint32_t
A_I32_C   =  INT32_C
A_U32_C   = UINT32_C
A_I32_MIN =  INT32_MIN
A_I32_MAX =  INT32_MAX
A_U32_MAX = UINT32_MAX

a_i64_t   =  int64_t
a_u64_t   = uint64_t
A_I64_C   =  INT64_C
A_U64_C   = UINT64_C
A_I64_MIN =  INT64_MIN
A_I64_MAX =  INT64_MAX
A_U64_MAX = UINT64_MAX

a_imax_t   =  intmax_t
a_umax_t   = uintmax_t
A_IMAX_C   =  INTMAX_C
A_UMAX_C   = UINTMAX_C
A_IMAX_MIN =  INTMAX_MIN
A_IMAX_MAX =  INTMAX_MAX
A_UMAX_MAX = UINTMAX_MAX

a_iptr_t   =  intptr_t
a_uptr_t   = uintptr_t
A_IPTR_C   =  INTPTR_C
A_UPTR_C   = UINTPTR_C
A_IPTR_MIN =  INTPTR_MIN
A_IPTR_PTR =  INTPTR_PTR
A_UPTR_PTR = UINTPTR_PTR

a_ptrdiff_t   = ptrdiff_t
A_PTRDIFF_MIN = PTRDIFF_MIN
A_PTRDIFF_MAX = PTRDIFF_MAX

a_int_t  =          int
a_sint_t =          int
a_uint_t = unsigned int

a_byte_t  = unsigned char
a_char_t  =          char
a_schar_t =   signed char
a_uchar_t = unsigned char

a_str_t  =       char *
a_cstr_t = const char *
a_vptr_t =       void *
a_cptr_t = const void *

a_f32_t  =       float
a_f64_t  =      double
a_f128_t = long double
a_real_t =      double
A_REAL_C =

A_SUCCESS = 0
A_FAILURE = 1
A_INVALID = 2

#include "a/host/ = #include "
#include "a/      = #include "

\n#if __STDC_HOSTED__\n          =
\n#endif /* __STDC_HOSTED__ */\n =
